text <- c(
"Because I could not stop for Death -",
"He kindly stopped for me .",
"The carriage held but just Ourselves -",
"and Immortality"
)
text
library(dplyr)
library(dplyr)
.libPaths()
lapply(.libPaths(), list.files)
renv::init()
renv::install(dplyr)
renv::install("dplyr")
renv::install("tidyverse")
library(dplyr)
data_frame(text)
tibble(text)
text_df <- tibble(
line = 1:4,
text = text
)
text_df
install.packages("tidytext")
library(tidytext)
text_df |>
unnest_tokens(word, text)
text_df |>
unnest_tokens(word, text, to_lower = FALSE)
library(janeaustenr)
library(tidyverse)
# Tidying the works of Jane Austen
austen_books()
austen_books() |>
group_by(book) |>
mutate(
line_number = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore.case = TRUE)))
)
austen_books() |>
group_by(book) |>
mutate(
line_number = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))
)
# Tidying the works of Jane Austen
original_books <- austen_books() |>
group_by(book) |>
mutate(
line_number = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))
) |>
ungroup()
original_books
original_books |>
unnest_tokens(word, text)
tidy_books <- original_books |>
unnest_tokens(word, text)
stop_words
tail(stop_words)
data(stop_words)
tidy_books |>
anti_join(stop_words)
tidy_books <- tidy_books |>
anti_join(stop_words)
tidy_books |>
count(word, sort = TRUE)
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600)
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600) |>
ggplot(aes(n, word)) +
geom_col()
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600) |>
ggplot(aes(n, fct_reorder(word))) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600) |>
ggplot(aes(n, fct_reorder(word, n))) +
geom_col() +
xlab(NULL) +
coord_flip()
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600) |>
ggplot(aes(n, fct_reorder(word, n))) +
geom_col() +
xlab(NULL)
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600) |>
ggplot(aes(n, fct_reorder(word, n))) +
geom_col() +
ylab(NULL)
# Word Frequencies --------------------------------------------------
library(gutenbergr)
install.packages("gutenbergr")
# Word Frequencies --------------------------------------------------
library(gutenbergr)
gutenberg_works()
gutenberg_works() |> view()
?str_detect()
view()
gutenberg_works() |>
filter(str_detect(title, "Alice")) |>
view()
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
hgwells <- gutenberg_download(c(35, 36, 5230, 159),
mirror = "https://gutenberg.nabasny.com/")
alice_in_wonderland <- gutenberg_download(11)
alice_in_wonderland <- gutenberg_download(11, mirror = "https://www.gutenberg.org/dirs/ ")
alice_in_wonderland <- gutenberg_download(11, mirror = "https://www.gutenberg.org/dirs/")
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
monte_cristo <- gutenberg_download(1184)
gutenberg_works(title = "Alice's Adventures in Wonderland")
gutenberg_works(title == "Alice's Adventures in Wonderland")
monte_cristo <- gutenberg_download(11)
gutenberg_get_mirror()
gutenberg_mirror()
monte_cristo <- gutenberg_download(11, mirror = "https://mirrors.xmission.com/gutenberg/")
monte_cristo <- gutenberg_download(11,
mirror = "ftp://mirrors.xmission.com/gutenberg/")
monte_cristo <- gutenberg_download(11,
mirror = "https://www.gutenberg.org/dirs/")
monte_cristo <- gutenberg_download(
11,
mirror = "rsync://gutenberg.pglaf.org/gutenber"
)
gutenberg_download(
11,
mirror = "rsync://gutenberg.pglaf.org/gutenber"
)
?gutenberg_download()
gutenberg_get_mirror()
gutenberg_works(title == "Alice's Adventures in Wonderland") |>
gutenberg_download()
gutenberg_works(title == "Alice's Adventures in Wonderland")
library(tidyverse)
library(tidytext)
library(janeaustenr)
# Word Frequencies --------------------------------------------------
library(gutenbergr)
gutenberg_works(title == "Alice's Adventures in Wonderland")
gutenberg_works(title == "Alice's Adventures in Wonderland") |>
gutenberg_download()
gutenberg_works(title == "Alice's Adventures in Wonderland") |>
read_zip_url()
gutenberg_works(title == "Alice's Adventures in Wonderland") |>
read_zip_url("http://aleph.gutenberg.org/1/11/11.zip")
read_zip_url("http://aleph.gutenberg.org/1/11/11.zip")
gutenberg_metadata
gutenberg_download(1)
gutenberg_download(11)
gutenberg_download(10)
gutenberg_download(12)
gutenberg_works()
gutenberg_works(author == "Lewis Carroll")
gutenberg_works(author == "Carroll Lewis")
gutenberg_works(author)
gutenberg_authors
gutenberg_works(author == "Lewis, Carroll")
gutenberg_authors |> print(100)
gutenberg_works(author == "Carroll, Lewis")
gutenberg_works(author == "Carroll, Lewis") |>
gutenberg_download(13)
monte_cristo <- gutenberg_download(35688)
alice_wl <- gutenberg_download(c(28885, 38065))
alice_wl
gutenberg_download(c(35, 36, 5230, 159))
hgwells <- gutenberg_download(c(35, 36, 5230))
# Removing stop-words -----------------------------------------------
data(stop_words)
hgwells |>
unnest_tokens(word, text) |>
anti_join(stop_words)
hgwells
tidy_hgwells <- hgwells |>
unnest_tokens(word, text) |>
anti_join(stop_words)
tidy_hgwells
tidy_hgwells |>
count(text, sort = TRUE)
tidy_hgwells |>
count(word sort = TRUE)
tidy_hgwells |>
count(word, sort = TRUE)
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
bronte
tidy_bronte <- bronte |>
unnest_tokens(word, text) |>
anti_join(stop_words)
tidy_bronte
tidy_bronte |>
count(word, sort = TRUE)
library(janeaustenr)
# Tidying the works of Jane Austen ----------------------------------
original_books <- austen_books() |>
group_by(book) |>
mutate(
line_number = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))
) |>
ungroup()
tidy_books <- original_books |>
unnest_tokens(word, text)
tidy_books <- tidy_books |>
anti_join(stop_words)
tidy_books |>
count(word, sort = TRUE) |>
filter(n > 600) |>
ggplot(aes(n, fct_reorder(word, n))) +
geom_col() +
ylab(NULL)
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
)
tidy_books
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
)
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(3:))
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(3:6))
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(4:6)) |>
mutate(
word = str_extract(word, "[a-z]"+)
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(4:6)) |>
mutate(
word = str_extract(word, "[a-z]+")
) |>
count(author, word)
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(4:6)) |>
mutate(
word = str_extract(word, "[a-z]+")
) |>
count(author, word) |>
mutate(
.by = author,
proportion = n/sum(n)
)
?mutate()
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(4:6)) |>
mutate(
word = str_extract(word, "[a-z]+")
) |>
count(author, word) |>
mutate(
.by = author,
proportion = n/sum(n)
) |>
select(-n) |>
pivot_wider(
names_from = "author",
values_from = proportion
)
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(4:6)) |>
mutate(
word = str_extract(word, "[a-z]+")
) |>
count(author, word) |>
mutate(
.by = author,
proportion = n/sum(n)
) |>
select(-n) |>
pivot_wider(
names_from = "author",
values_from = proportion
) |>
pivot_longer(
cols = c(2:4),
names_to = "author",
values_to = "proportion"
)
bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")
) |>
select(-c(4:6)) |>
mutate(
word = str_extract(word, "[a-z]+")
) |>
count(author, word) |>
mutate(
.by = author,
proportion = n/sum(n)
) |>
select(-n) |>
pivot_wider(
id_cols = word,
names_from = "author",
values_from = proportion
) |>
pivot_longer(
cols = c(2:4),
names_to = "author",
values_to = "proportion"
)
